// üîß src/components/SubProgramMemberTable.jsx (Í∞úÏÑ† + Ïú†ÏßÄ Í∏∞Îä• ÌÜµÌï© Î≤ÑÏ†Ñ)

import React, { useState } from "react";
import { DataGrid } from "@mui/x-data-grid";
import { Button, Box } from "@mui/material";

/**
 * üìå ÏÑ∏Î∂ÄÏÇ¨ÏóÖ Ïù¥Ïö©Ïûê Î™©Î°ù ÌÖåÏù¥Î∏î + Îã®Ïùº ÏÇ≠Ï†ú + Îã§Ï§ë ÏÑ†ÌÉù ÏÇ≠Ï†ú
 * @param {Array} members - Ïù¥Ïö©Ïûê Î™©Î°ù
 * @param {Function} onDelete - ÏÇ≠Ï†ú Ìï∏Îì§Îü¨ (userId)
 * @param {Function} canDelete - ÏÇ≠Ï†ú Í∞ÄÎä• Ïó¨Î∂Ä Ï≤¥ÌÅ¨ Ìï®Ïàò (row)
 */
function SubProgramMemberTable({ members, onDelete, canDelete }) {
  const [selectionModel, setSelectionModel] = useState([]);

  const columns = [
    { field: "team", headerName: "ÌåÄÎ™Ö", width: 120 },
    { field: "unitProgram", headerName: "Îã®ÏúÑÏÇ¨ÏóÖÎ™Ö", width: 180 },
    { field: "subProgram", headerName: "ÏÑ∏Î∂ÄÏÇ¨ÏóÖÎ™Ö", width: 180 },
    { field: "name", headerName: "Ïù¥Ïö©ÏûêÎ™Ö", width: 140 },
    { field: "gender", headerName: "ÏÑ±Î≥Ñ", width: 100 },
    { field: "phone", headerName: "Ïó∞ÎùΩÏ≤ò", width: 150 },
    { field: "birthdate", headerName: "ÏÉùÎÖÑÏõîÏùº", width: 140 },
    { field: "ageGroup", headerName: "Ïó∞Î†πÎåÄ", width: 100 },
    { field: "address", headerName: "Í±∞Ï£ºÏßÄ", width: 180 },
    { field: "incomeType", headerName: "ÏÜåÎìùÍµ¨Î∂Ñ", width: 140 },
    { field: "disability", headerName: "Ïû•Ïï†Ïú†Î¨¥", width: 120 },
    { field: "paidType", headerName: "Ïú†Î£å/Î¨¥Î£å", width: 120 },
    { field: "status", headerName: "Ïù¥Ïö©ÏÉÅÌÉú", width: 120 },
    {
      field: "actions",
      headerName: "ÏÇ≠Ï†ú",
      width: 100,
      sortable: false,
      filterable: false,
      align: "center",
      renderCell: (params) => {
        const row = params.row;
        const deletable = typeof canDelete === "function" ? canDelete(row) : false;

        if (!deletable) return null;

        return (
          <Button
            color="error"
            size="small"
            onClick={() => onDelete?.(row.id || row.userId)}
            sx={{ minWidth: 0, padding: "4px 8px" }}
          >
            ÏÇ≠Ï†ú
          </Button>
        );
      }
    }
  ];

  return (
    <Box sx={{ width: "100%", overflowX: "auto" }}>
      <Box sx={{ height: "60vh", minWidth: 1600 }}>
        <DataGrid
          rows={members}
          columns={columns}
          getRowId={(row) => row.id || row.userId || `${row.name}-${row.phone}`}
          pageSize={10}
          checkboxSelection
          disableSelectionOnClick
          selectionModel={selectionModel}
          onSelectionModelChange={(newSelection) => setSelectionModel(newSelection)}
          sx={{
            "& .MuiDataGrid-columnHeaders": { backgroundColor: "#f5f5f5" },
            mb: 2
          }}
        />
      </Box>

      {selectionModel.length > 0 && (
        <Button
          variant="contained"
          color="error"
          onClick={() => {
            if (window.confirm(`ÏÑ†ÌÉùÌïú ${selectionModel.length}Î™ÖÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?`)) {
              selectionModel.forEach((id) => onDelete(id));
            }
          }}
        >
          ÏÑ†ÌÉù ÏÇ≠Ï†ú ({selectionModel.length}Î™Ö)
        </Button>
      )}
    </Box>
  );
}

export default SubProgramMemberTable;